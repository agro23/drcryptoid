First point: KISS over DRY. Keep it simple and get something done. Function over Form, first. Once it runs then refactor. Once the code is pretty, THEN make the site pretty. It will be worth the time lost fixing things for the sake of appearance if a project is feature-rich or at least works well and as expected.

Second point: Make the database simple. Make every entry of the same object type: article. But then divide those into subtypes: Alert, Post, Comment, ForumEntry (and maybe ForumReply). Each can then have a TYPE as mentioned, a LEVEL, a BACKLINK, and a TARGET. The Level will determine who posted it and where, the Backlink is where it's attached if it is in response to something (so it will be another article to attach to, perhaps--although watch out for deleted parents!) and the Target will be where it is actually supposed to render in the HTML (whether that's determined by a Route or something else is TBD. Routing may supersede the need for a Target field altogether.)

  Second point, part A: Make sure that every article doesn't carry its paragraphs as anything more than a text field not an array of paragraphs.

  Second point, part B: Comments might live attached to their parent in a comment field array (an array of articles [with or without routes] that are type 'Comment'. This would allow nested comments to posts so that a comment could have a comment and so on.
 =====

 export let masterFirebaseConfig = {
   apiKey: "AIzaSyAya6eAdqjPohEVnGpdExpXaAmLwex1ugQ",
     authDomain: "drcryptoid-23.firebaseapp.com",
     databaseURL: "https://drcryptoid-23.firebaseio.com",
     projectId: "drcryptoid-23",
     storageBucket: "drcryptoid-23.appspot.com",
     messagingSenderId: "440759972470"
   };


use this tutorial:
https://angular.io/tutorial

1) Used for price lookup:
https://coursetro.com/posts/code/91/Angular-CryptoCurrency-Tutorial---Display-Exchange-Data-with-an-API

2) Used for dashboard:

https://www.genuitec.com/create-cryptocurrency-dashboard-angular/ (uses coinmarketcap.com) <-- broken now!!!!

NOTES:

https://rishabh.io/misc/how-to-build-a-simple-cryptocurrency-app-using-angular4-expressjs-and-coinbase-api.html


3) Maybe some useful info:
https://www.dunebook.com/create-cryptocurrency-dashboard-angular/


read this:
https://www.linkedin.com/pulse/firebase-angular4-cryptocurrencies-brian-warner

ticker api data is here:
https://coinmarketcap.com/api/

Have to read it and list the price myself. Not sure how to do the animations yet.


get articles from here:
https://hackernoon.com/top-10-blockchain-blogs-books-podcasts-51968de42168

https://www.wired.com/story/guide-blockchain/

https://blog.moneo.io/top-45-hashtags-use-blockchain-crypto-plus-42-top-influencers/

https://www.linkedin.com/pulse/firebase-angular4-cryptocurrencies-brian-warner

 @cryptonewsmag!
https://cryptocurrencynews.com/ceo-series/bethereum-ceo-ico/ …
#cryptocurrency #CryptoSummit #cryptonews #ICO #preICO #TokenSale #presale #blockchain #bitcoin #reddit #Bitcointalk #Ethereum #ERC20 $ETH $BTC

https://developer.twitter.com/en/docs/api-reference-index
https://blog.twitter.com/developer/en_us/a/2014/rendering-tweets-with-angularjs-and-nodejs.html
My App : https://apps.twitter.com/app/15014217 for API data


BLOGGING
https://hub.packtpub.com/writing-blog-application-nodejs-and-angularjs/
https://github.com/collective/tutorial-blog-angular2
